- Revert modification to P::LE::NR2::Field as it is no longer needed.
- Modify Utils::cgtsv to avoid erroneously modifying its arguments
- Push min perl version to 5.16, as needed by PDL::FFTW3
- Modify P::LE::NR2::Field so as not to modify Haydock coefficients
  inadvertently
0.023 2024-10-02
- Add tests for modules ST
- Add tensorial modules ST, to deal with anisotropic components
0.022 2024-09-21
- Fix mistake in Ph::WE::ST::Haydock::applyMetric
- Fix mistake in Ph::WE::S::Haydock::applyMetric
- Add Photonic::LE::ST::GreenP

- Add Photonic::WE::ST::Metric Almost identical to Photonic::WE::S::Metric
- Add Photonic::LE::ST::Field Almost identical to Ph::LE::S::Field
- Add Photonic::LE::ST::EpsTensor Almost identical to Ph::LE::S::EpsTensor
- Add Photonic::LE::ST::EpsL. Almost identical to Ph::LE::S::EpsL
- Add tests for Photonic::LE::ST::Haydock
- Add and mofify Photonic::LE::ST::Haydock to use tensorial epsilon
- Add some tests for Photonic::Geometry::FromEpsilonTensor
- Modify Photonic::Roles::Geometry so it can deal with Epsilon Tensor
- Add Photonic::Geometry::FromEpsilonTensor
- Add types ComplexMatrix and ComplexMatrixField, for tensorial input in dielectric functions
- Fix bug in macroscopic response from fields in Ph::LE::NR2::Field and Ph::LE::S::Field
- Fix skip test in geometry.t when there is no image converter
- separate storeAllFN from stateFN
- Haydock states stored in memory-mapped files rather than using Storable
- remove the state_iterator capability which is replaced by memory-mapping, allowing large threaded calculations
- switch type system to Type::Tiny
- switch OO system to Moo
- make Photonic::Roles::Field

0.021 2021-10-01
- Add example of honeycomb lattice for LE::NR2
- Admit 'haydock' as an optional parameter in P::Roles::EpsTensor
- Documentation P::LE::NR2::EpsTensor
- Documentation P::Geometry::FromB

0.020 2021-09-25
- Admit Ed J (mohawk2) PR
- Merge OneH and ALlH into Haydock
- Inmutable objects. Response functions should be given at creation time
- factorize lots of codes
- use ndarrays instead of perl arrays
- unify Reorthogonalize roles

0.019 2021-09-24
- Fix error in tests

0.018 2021-07-20
- Correct filtering of vector fields

0.017 2021-06-26
- switch from PDL::Complex to native-complex

0.016 2021-05-30
- Factor several repetitive tasks
- use PDL::FFTW3's new ability to take PDL::Complex inputs
- Moose type abstracting real vs complex (inc native) data

0.015 2021-03-12
- convert from bundled Fortran code to PDL::LinearAlgebra

0.014 2020-03-26
  - Fix (again) t/geometry.t's bug when netpbm files are not available

0.013 2020-03-26
  - Add error message to Geometry::FromImage2D in case image file can't be read.

0.012 2020-03-25
  - Fix t/geometry.t's bug when netpbm files are not available

0.011 2019-03-09
  - Change travis file
  - Add before_install to .travis.yml
  - Other changes to travis.yml
  - Skip dimensions to HProd
  - Skip dimensions in MHProd, not sure it works
  - Commented out Lucila's storeAllH
  - Add generalizations to two and more media.
  - New directories: NPhase.
  - NPhase/OneH
  - NPhase/AllH
  - Change Pod to new OneH AllH
  - Allow complex Haydock coefficients in new codes.
  - Added NPhase/EpsL
  - Added NPhase/EpsTensor
  - Added non Hermitian euclidean complex scalar product to Utils EProd
  - Modify NPhases::OneH and AllH to use EProd
  - Added N phases spinor methods in directory NPS
  - Add NPS::OneH, , NPS::EpsL, NPS::EpsTensor
  - Added mGNorm (minus normalized reciprocal vectors) to Geometry.
  - Added pmGNorm (plus and minus normalized reciprocal vectors) to
    Geometry.
  - Added spinor euclidean scalar product SProd to Utils
  - Use SProd in NPS/OneH
  - Change organization to allow more code reuse.
  - Made Roles for Geometry, OneH and AllH.
  - Made directory/class hierarchy according to system. Thus, LE is for
    longitudinal epsilon (dielectric function) and WE for wave
    equation. NR2 is for non retarded with two media. R2 is for
    retarded with 2 media.
  - Made documentation modules for the generic functions. Thus
    Photonic::OneH is only documentation, while
    Photonic::LE::NR2::OneH is one implementation.

0.010 2018-09-18
  - Eliminated Makefile.PL, as it is automatically built
  - Merge branch 'bernardo'
  - Modified SH to have finite polarizability at zero density
  - Added Lucila's retarded field calculations
  - Added Lucila's field calculation to the proper directory
  - First attempt to reorthogonalize
  - Normalize states on each step
  - First working reorthogonalization
  - Added flag to reorthogonalize in the old NR/AllH module
  - removed old AllH with reorthogonalization
  - Changed retarded calculation of b coefficient
  - Removed some comments
  - Allow reorthogonalization in NonRetarded::AllH and change
    normalization in Retarded and NonRetarded OneH to stabilize
    calculation.
  - Merge branch 'reorthogonalization'
  - Added files that Build said were missing
  - Added travis yaml file
  - Renamed travis yaml file
  - Added after_failure: to look a build failure
  - Corrected .travis.yml
  - Add namespace::autoclean to dependencies in Build.PL
  - Add mask to SH susceptibility
  - Modify SHChiTensor in order to admit options
      - The option mask takes an array of ones and zeroes to indicate
        the contributions from which regions to be taken into account.
      - The option kind takes a letter 'f' full, 'd', dipolar or 'q',
        quadrupolar.
  - Add modules for gyrotropy
      - Add complex unit pairs and dyad to obtain all independent
        components        of the Green's function, the wave operator
        and the epsilon tensor for gyrotropic systems.
  - Correct version string
      - Correct version string in EpsilonTensorF and WaveF
  - Add reorthogonalization to Retarded. Correct code for gyrotropic
      - Added reorthogonalization methods to retarded calculations.
      - Added code to save and restore haydock fields. Incomplete.
      - Added complex conjugate unit vectors and dyads.
      - Quite untested. Lucila's changes.
  - Meta files, to be deleted soon
  - Removed META files

0.009 2017-09-24
  - Changed slightly the code for second harmonic calculations.
  - Corrected SHG
     - Cleaned code to run slatec routines cgtsl and dgtsl. Now they
       can be used with 4 or 6 arguments and may use inplace
       arguments. Added typemap.PL so that it creates a copy of PDL's
       typemap to be used by .pd code.
  - Changes to the documentation fo FieldH
  - Correct mistakes in Geometry from image2D.
  - Deleted a couple of unneeded prints
  - Changed calls to fortran routines
     - I copyied arguments except when inplace since cgtsl and dgtsl
       destroy all its arguments.
     - Changed tests to test inplace.
  - Added documentation to shg
  - Found convergence problems with current field
    calculation. Started exploring.
  - Changed FieldH to use linpack
     - instead of solving naively tridiagonal linear equation to get
       field
  - Added code to accelerate selfconsistent longitudinal polarization.
      - Left it commented, as it is missing the longitudinal projetor and
        the full self consistent field
  - Added field1 and field2 accesors and buiders to SH
      - And eliminated now unnecessary BUILD
  - Added to SH alternative self consistent longitudinal macroscopic
    polarization component P2LMCalt. The non alternative hasn't been
    added yet.
  - Subtle changes in SHG. Now we obey y y<-> -y symmetry for 2D systems
    with mirror line.

0.008  2017-02-04
  - Added two smallness parameters, one for Haydock and one for
    continued fractions.
  - Correct version in Wave.pm
  - There is a logical error en EpsL and GreeP. The upper of the
    iteration was wrong, but now we can't distinguish between
    nonconvergence or using up all Haydock coefficients.
  - Update Changes and README. Correct upper limit in iterations.
  - Change logic of convergence tests
  - Modified code to allow two smallness parameters
     - Independently state criteria for Haydock coefficient
       calculations and for continued fraction convergence.
  - Added projected wave operator and projected dielectric function
     - This modules may be used along principal directions when the full
       matricial response is unneeded, thus saving time.
  - The routines cgtsl and dgtsl were incorrectly imported and documented
  - Corrected interface to the linpack routines cgtsl and dgtsl
  - Changes to allow disttest to pass

0.007 2016-09-03
  - Put authors in Build.PL
  - Update references in README
  - Add modules for retarded calculations.

0.006 2016-07-07
  - Add mode line to Changes to use org-mode when editing.
  - Add to INSTALL
  - Correct error in README
  - Correct error in SYNOPSIS of Photonic.pm
  -  Add authors.
  - Correct mistake in Types and in FieldH.

0.005 2016-06-12
  - Added INSTALL
